name: CI

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - '*.txt'
      - '*.pdf'
      - '*.png'
      - '*.jpg'
      - '*.jpeg'
      - '*.gif'
      - 'LICENSE'
      - '.gitignore'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - '*.txt'
      - '*.pdf'
      - '*.png'
      - '*.jpg'
      - '*.jpeg'
      - '*.gif'
      - 'LICENSE'
      - '.gitignore'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        build_type: [Debug, Release]
        compiler: [gcc, clang]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential libgtest-dev
        
        # Build and install Google Test
        cd /usr/src/gtest
        sudo cmake CMakeLists.txt
        sudo make
        sudo cp lib/*.a /usr/lib
        sudo mkdir -p /usr/local/lib/gtest
        sudo ln -s /usr/lib/libgtest.a /usr/local/lib/gtest/libgtest.a
        sudo ln -s /usr/lib/libgtest_main.a /usr/local/lib/gtest/libgtest_main.a
    
    - name: Set up compiler
      run: |
        if [ "${{ matrix.compiler }}" = "clang" ]; then
          sudo apt-get install -y clang
          echo "CC=clang" >> $GITHUB_ENV
          echo "CXX=clang++" >> $GITHUB_ENV
        else
          echo "CC=gcc" >> $GITHUB_ENV
          echo "CXX=g++" >> $GITHUB_ENV
        fi
    
    - name: Configure CMake
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
    
    - name: Build
      run: |
        cmake --build build --config ${{ matrix.build_type }} -j$(nproc)
    
    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure --verbose
    
    - name: Run specific test executable
      run: |
        cd build
        ./cvt_tests --gtest_output=xml:test_results.xml
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.compiler }}-${{ matrix.build_type }}
        path: build/test_results.xml

  static-analysis:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential libgtest-dev cppcheck
    
    - name: Run cppcheck
      run: |
        cppcheck --enable=warning,style,performance,portability \
                 --std=c++17 \
                 --suppress=missingIncludeSystem \
                 --suppress=missingInclude \
                 --suppress=unusedFunction \
                 --suppress=unmatchedSuppression \
                 --error-exitcode=1 --inline-suppr \
                 -I include/ \
                 src/
    
    - name: Configure CMake for analysis
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=Debug
    
    - name: Build for analysis
      run: |
        cmake --build build --config Debug
