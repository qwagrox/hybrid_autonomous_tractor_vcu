autonomous_tractor_vcu/
├── CMakeLists.txt                 # 主编译配置文件
├── README.md                      # 项目说明文档
├── LICENSE                        # 开源许可证
├── .github/                       # GitHub CI/CD配置
│   └── workflows/
│       ├── ci-cd.yml              # 持续集成配置
│       └── release.yml            # 发布流程配置
├── config/                        # 配置文件目录
│   ├── system_config.yaml         # 系统主要参数配置
│   ├── control_params.yaml        # 控制参数配置
│   ├── can_protocols.yaml         # CAN协议配置
│   ├── cvt_control.yaml           # CVT控制参数
│   ├── fault_rules.yaml           # 故障检测规则
│   ├── sensor_calibration.yaml    # 传感器标定
│   ├── j1939_config.yaml          # J1939协议配置
│   ├── energy_management.yaml     # 能量管理配置
│   ├── safety_limits.yaml         # 安全限制配置
│   └── learning_params.yaml       # 学习参数配置
├── include/                       # 头文件目录
│   ├── vcu_core_types.hpp         # 核心类型定义
│   ├── can_bus_interface.hpp      # CAN总线接口
│   ├── system_integration.hpp     # 系统集成器
│   ├── protocol_adapters/         # 协议适配器
│   │   ├── cvt_protocol_adapter.hpp
│   │   ├── john_deere_adapter.hpp
│   │   ├── case_ih_adapter.hpp
│   │   ├── claas_adapter.hpp
│   │   ├── j1939_adapter.hpp
│   │   └── isobus_adapter.hpp
│   ├── perception/                # 感知层
│   │   ├── sensor_fusion.hpp
│   │   ├── load_detector.hpp
│   │   ├── terrain_analyzer.hpp
│   │   ├── obstacle_detector.hpp
│   │   └── path_analyzer.hpp
│   ├── prediction/                # 预测层
│   │   ├── predictive_analytics.hpp
│   │   ├── load_forecaster.hpp
│   │   ├── energy_predictor.hpp
│   │   ├── terrain_predictor.hpp
│   │   └── path_predictor.hpp
│   ├── control/                   # 控制层
│   │   ├── torque_arbiter.hpp
│   │   ├── cvt_controller.hpp
│   │   ├── energy_manager.hpp
│   │   ├── implement_controller.hpp
│   │   ├── steering_controller.hpp
│   │   └── braking_controller.hpp
│   ├── execution/                 # 执行层
│   │   ├── actuator_interface.hpp
│   │   ├── safety_monitor.hpp
│   │   ├── fault_handler.hpp
│   │   ├── command_validator.hpp
│   │   └── emergency_handler.hpp
│   ├── diagnostic/                # 诊断层
│   │   ├── health_monitor.hpp
│   │   ├── data_logger.hpp
│   │   ├── adaptive_learner.hpp
│   │   ├── performance_monitor.hpp
│   │   └── maintenance_planner.hpp
│   ├── models/                    # 模型层
│   │   ├── engine_model.hpp
│   │   ├── motor_model.hpp
│   │   ├── battery_model.hpp
│   │   ├── transmission_model.hpp
│   │   ├── vehicle_dynamics_model.hpp
│   │   ├── terrain_model.hpp
│   │   └── implement_model.hpp
│   ├── hardware/                  # 硬件抽象层
│   │   ├── can_driver.hpp
│   │   ├── gpio_driver.hpp
│   │   ├── adc_driver.hpp
│   │   ├── pwm_driver.hpp
│   │   ├── watchdog.hpp
│   │   └── power_manager.hpp
│   └── utils/                     # 工具类
│       ├── math_utils.hpp
│       ├── time_utils.hpp
│       ├── config_parser.hpp
│       ├── circular_buffer.hpp
│       ├── moving_average.hpp
│       └── kalman_filter.hpp
├── src/                           # 源文件目录
│   ├── main_vcu_system.cpp        # 主程序入口
│   ├── can_bus_interface.cpp
│   ├── system_integration.cpp
│   ├── protocol_adapters/         # 协议实现
│   │   ├── cvt_protocol_adapter.cpp
│   │   ├── john_deere_adapter.cpp
│   │   ├── case_ih_adapter.cpp
│   │   ├── claas_adapter.cpp
│   │   ├── j1939_adapter.cpp
│   │   └── isobus_adapter.cpp
│   ├── perception/
│   │   ├── sensor_fusion.cpp
│   │   ├── load_detector.cpp
│   │   ├── terrain_analyzer.cpp
│   │   ├── obstacle_detector.cpp
│   │   └── path_analyzer.cpp
│   ├── prediction/
│   │   ├── predictive_analytics.cpp
│   │   ├── load_forecaster.cpp
│   │   ├── energy_predictor.cpp
│   │   ├── terrain_predictor.cpp
│   │   └── path_predictor.cpp
│   ├── control/
│   │   ├── torque_arbiter.cpp
│   │   ├── cvt_controller.cpp
│   │   ├── energy_manager.cpp
│   │   ├── implement_controller.cpp
│   │   ├── steering_controller.cpp
│   │   └── braking_controller.cpp
│   ├── execution/
│   │   ├── actuator_interface.cpp
│   │   ├── safety_monitor.cpp
│   │   ├── fault_handler.cpp
│   │   ├── command_validator.cpp
│   │   └── emergency_handler.cpp
│   ├── diagnostic/
│   │   ├── health_monitor.cpp
│   │   ├── data_logger.cpp
│   │   ├── adaptive_learner.cpp
│   │   ├── performance_monitor.cpp
│   │   └── maintenance_planner.cpp
│   ├── models/
│   │   ├── engine_model.cpp
│   │   ├── motor_model.cpp
│   │   ├── battery_model.cpp
│   │   ├── transmission_model.cpp
│   │   ├── vehicle_dynamics_model.cpp
│   │   ├── terrain_model.cpp
│   │   └── implement_model.cpp
│   ├── hardware/
│   │   ├── can_driver.cpp
│   │   ├── gpio_driver.cpp
│   │   ├── adc_driver.cpp
│   │   ├── pwm_driver.cpp
│   │   ├── watchdog.cpp
│   │   └── power_manager.cpp
│   └── utils/
│       ├── math_utils.cpp
│       ├── time_utils.cpp
│       ├── config_parser.cpp
│       ├── circular_buffer.cpp
│       ├── moving_average.cpp
│       └── kalman_filter.cpp
├── models/                        # 机器学习模型文件
│   ├── efficiency_predictor.onnx
│   ├── load_forecast_model.tflite
│   ├── terrain_classifier.model
│   └── fault_detection_model.xml
├── tests/                         # 测试目录
│   ├── unit_tests/                # 单元测试
│   │   ├── test_sensor_fusion.cpp
│   │   ├── test_load_detector.cpp
│   │   ├── test_torque_arbiter.cpp
│   │   ├── test_cvt_controller.cpp
│   │   ├── test_energy_manager.cpp
│   │   └── test_data_logger.cpp
│   ├── integration_tests/         # 集成测试
│   │   ├── test_can_communication.cpp
│   │   ├── test_control_loop.cpp
│   │   ├── test_fault_recovery.cpp
│   │   ├── test_safety_system.cpp
│   │   └── test_learning_system.cpp
│   ├── system_tests/              # 系统测试
│   │   ├── test_full_system.cpp
│   │   ├── test_performance.cpp
│   │   └── test_reliability.cpp
│   └── test_data/                 # 测试数据
│       ├── can_capture.pcap
│       ├── sensor_data.csv
│       ├── field_test_data.bag
│       └── fault_scenarios.yaml
├── scripts/                       # 工具脚本
│   ├── build.sh                   # 构建脚本
│   ├── run_simulation.sh          # 仿真运行脚本
│   ├── deploy_target.sh           # 部署脚本
│   ├── monitor_system.py          # 系统监控
│   ├── calibrate_sensors.py       # 传感器校准
│   ├── analyze_logs.py            # 日志分析
│   └── generate_docs.py           # 文档生成
├── tools/                         # 开发工具
│   ├── can_analyzer/              # CAN分析工具
│   │   ├── can_monitor.cpp
│   │   ├── can_replay.cpp
│   │   └── can_injector.cpp
│   ├── data_visualizer/           # 数据可视化
│   │   ├── realtime_plotter.py
│   │   ├── data_explorer.py
│   │   └── performance_dashboard.py
│   ├── protocol_debugger/         # 协议调试
│   │   ├── j1939_debugger.cpp
│   │   ├── isobus_debugger.cpp
│   │   └── custom_protocol_debugger.cpp
│   └── simulation/                # 仿真工具
│       ├── vehicle_simulator.cpp
│       ├── sensor_simulator.cpp
│       └── environment_simulator.cpp
└── docs/                          # 文档
    ├── architecture/              # 架构文档
    │   ├── system_architecture.md
    │   ├── software_architecture.md
    │   ├── hardware_architecture.md
    │   └── communication_architecture.md
    ├── api/                       # API文档
    │   ├── control_api.md
    │   ├── perception_api.md
    │   ├── prediction_api.md
    │   └── diagnostic_api.md
    ├── protocols/                 # 协议文档
    │   ├── j1939_spec.md
    │   ├── isobus_spec.md
    │   ├── can_protocols.md
    │   └── custom_protocols.md
    ├── development/               # 开发文档
    │   ├── coding_standards.md
    │   ├── testing_guide.md
    │   ├── deployment_guide.md
    │   └── maintenance_guide.md
    ├── theory/                    # 理论文档
    │   ├── control_theory.md
    │   ├── vehicle_dynamics.md
    │   ├── energy_management.md
    │   └── machine_learning.md
    └── tutorials/                 # 教程
        ├── getting_started.md
        ├── basic_usage.md
        ├── advanced_features.md
        └── troubleshooting.md